uniform mat4 model_matrix;
uniform mat4 view_matrix;

attribute vec4 a_position;
attribute vec2 a_tex_coord;

varying vec2 v_tex_coord;
varying vec3 v_col_pos;

uniform sampler2D u_sampler;

uniform vec3 u_world_light_pos;
uniform float u_intrinsic_bright;
varying float v_bright;

void main() {    
    v_tex_coord = a_tex_coord;
    v_col_pos = a_position.xyz;
    vec4 world_pos = model_matrix * a_position;
    vec3 rev_light_dir = normalize((u_world_light_pos - world_pos.xyz));
    vec3 normal = normalize(mat3(model_matrix) * a_position.xyz);
    gl_Position = view_matrix * world_pos;
    gl_PointSize = 2.0;
    v_bright = dot(rev_light_dir, normal)  * 2.5;
    v_bright =  clamp(v_bright + u_intrinsic_bright, 0.20, 10.0);
    
}